#!/bin/sh

echo "this script will automatically install arch, mostly following the official install guide, but with some tweaks/packages of mine installed too"

echo "this script should be run after you've chroot-ed into your install and have done all previous steps from the install guide"

sleep 10

timedatectl list-timezones | column

echo "choose a timezone from the list above, format: Region/City"

read timezone

ln -sf /usr/share/zoneinfo/$timezone /etc/localtime

hwclock --systohc

sed -i '177s/.//' /etc/locale.gen # credit to ermannoferrari for this

locale-gen

echo "LANG=en_US.UTF-8" >> /etc/locale.conf

echo "what should the hostname be?"

read hostname

echo "$hostname" >> /etc/hostname

echo "127.0.0.1 localhost
::1             localhost
127.0.1.1       $hostname.localdomain   $hostname" >> /etc/hosts

echo "installing networkmanager..." && sleep 3

pacman -S --needed --noconfirm networkmanager

systemctl enable NetworkManager

echo "what should the root password be?"

passwd

cpu="$(grep vendor_id /proc/cpuinfo | tail -n1 | awk '{print $3}')"

if [ "$cpu" = "GenuineIntel" ]; then
    pacman -S --needed --noconfirm intel-ucode
elif [ "$cpu" = "AuthenticAMD" ]; then
    pacman -S --needed --noconfirm amd-ucode
fi

if [ -d /sys/firmware/efi/efivars ]; then
    lsblk

    echo "where is the ESP mounted? example: /boot/efi"

    read esp

    echo "installing grub..." && sleep 3

    pacman -S --needed --noconfirm grub efibootmgr dosfstools

    grub-install --target=x86_64-efi --efi-directory=$esp --bootloader-id=GRUB
else
    lsblk
    
    echo "which disk should GRUB be installed to? example: /dev/sda"

    read dsk

    echo "installing grub..." && sleep 3

    pacman -S --needed --noconfirm grub

    grub-install --target=i386-pc $dsk
fi

grub-mkconfig -o /boot/grub/grub.cfg

echo "list any additional packages you want installed in a space separated list, example: htop neofetch ..."

read pkgs

pacman -S --needed --noconfirm expac

# this gets the latest installed kernel package so we can install its headers package
# yes ik this is probably wonky asf but its what i could come up with :D

krnl="$(expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort -n | awk '$3 ~ /^linux/ ~ !/firmware|headers/ {print $3}' | tail -n1)"

pacman -S --needed --noconfirm base-devel $krnl-headers man-db man-pages texinfo $pkgs

pacman -Rns --noconfirm expac

echo "what should the name of your user be?"

read name

useradd -m $name

echo "what should their password be?"

passwd $name

echo "$name ALL=(ALL) ALL" >> /etc/sudoers.d/$name # also credit to ermannoferrari for this

echo "install finished, exit the chroot, unmount and reboot"
